c(-temp[1]/temp[2],(2*pi-temp[1])/temp[2])+2*pi *k/temp[2]
setwd("~/Dropbox/VALUTAZIONE ESAMI 2016/valutazione esame Biotec copy")
read.csv("Matematica-Esame Biotecnologie Matematica   30 novembre 2015-valutazioni-20151215_1822-comma_separated.csv")->dati30
read.csv("Matematica-Esame Biotecnologie Matematica   14 dicembre 2015-valutazioni-20151214_1655-comma_separated.csv")->dati14
read.csv("Matematica-Esame Biotecnologie Matematica   15 dicembre 2015-valutazioni-20151215_1820-comma_separated.csv")->dati15
read.csv("Matematica-Esame Biotecnologie Matematica   15 gennaio 2016-valutazioni-20160116_1159-comma_separated.csv")->dati15_2016
colnames(dati30)[13:25]->domande
colnames(dati30)[11]->totale
domande
hist(as.numeric(dati30[,totale]))
table(dati30[,domande[1]])##percentuali
table(dati30[,domande[2]])##retta
table(dati30[,domande[3]])##funzioni circolari inverse
table(dati30[,domande[4]])##growth
table(dati30[,domande[5]])##log eq
table(dati30[,domande[6]])##funzioni composte
table(dati30[,domande[7]])##trepunti
table(dati30[,domande[8]])##derivata composta
table(dati30[,domande[9]])##rettangolo
table(dati30[,domande[10]])##antide
table(dati30[,domande[11]])##comportamento asintotico
table(dati30[,domande[12]])##ftanfenti new
table(dati30[,domande[13]])##integrali def
colnames(dati15)[12:23]->domande
colnames(dati15)[11]->totale
domande
hist(as.numeric(dati15[,totale]))
table(dati15[,domande[1]])##retta
table(dati15[,domande[2]])##composte
table(dati15[,domande[3]])##funzioni circolari inverse
table(dati15[,domande[4]])##expeq
table(dati15[,domande[5]])##der it
table(dati15[,domande[6]])##retta tangente
table(dati15[,domande[7]])##derivata prodotto
table(dati15[,domande[8]])##derivata tab
table(dati15[,domande[9]])##growth
table(dati15[,domande[10]])##area fra curve
table(dati15[,domande[11]])#tangenti New
table(dati15[,domande[12]])##integ num
table(dati14[,"D..3..1.67"])###inverse
table(dati14[,"D..4..1.67"])##retta
table(dati14[,"D..5..1.67"])###composta
table(dati14[,"D..6..1.67"])##quoz
table(dati14[,"D..7..2.50"])##der approx
table(dati14[,"D..8..3.33"])##der itera
table(dati14[,"D..9..3.33"])#ingra
table(dati14[,"D..10..3.33"])#monte
table(dati14[,"D..11..0.83"]) ##definiti
table(dati14[,"D..12..4.17"]) ####trap
table(dati14[,"D..13..4.17"])##max
hist(as.numeric(dati14[,"Valutazione.30.00"] ) )
load("gruppi.rda")
c(-temp[1]/temp[2],(2*pi-temp[1])/temp[2])+2*pi *k/temp[2]
file0="gruppoArisultati.xlsx"
file1="iscritti3011A.xlsx"
file2="14-15 dicembre.xlsx"
file01="gruppoB1risultati.xlsx"
file02="gruppoB2risultati.xlsx"
temp<- loadWorkbook(file1, create=F)###caricamento dei file
as.data.frame(readWorksheet(temp, sheet=1))->iscrittiA
temp<- loadWorkbook(file0, create=F)
as.data.frame(readWorksheet(temp, sheet=1))->voticasaA
temp<- loadWorkbook(file01, create=F)
as.data.frame(readWorksheet(temp, sheet=1))->voticasaB1
library(XLConnect)
file0="gruppoArisultati.xlsx"
file1="iscritti3011A.xlsx"
file2="14-15 dicembre.xlsx"
file01="gruppoB1risultati.xlsx"
file02="gruppoB2risultati.xlsx"
temp<- loadWorkbook(file1, create=F)###caricamento dei file
as.data.frame(readWorksheet(temp, sheet=1))->iscrittiA
temp<- loadWorkbook(file0, create=F)
as.data.frame(readWorksheet(temp, sheet=1))->voticasaA
temp<- loadWorkbook(file01, create=F)
as.data.frame(readWorksheet(temp, sheet=1))->voticasaB1
temp<- loadWorkbook(file02, create=F)
```
as.data.frame(readWorksheet(temp, sheet=1))->voticasaB2
dim(voticasaB1)
doppioA=which(table(voticasaA[,3])>1)
doppioA
doppioni=names(table(voticasaA[,3])[doppioA])
d=which(voticasaA[,3]==doppioni)
voticasaA[d,]
todrop=c()
for (k in 1:length(doppioni))
{
i=which(voticasaA[,3]==doppioni[k])
todrop=c(todrop,i[1])
#voticasaA[i[1],17:18]=voticasaA[i[2],17:18]
}
voticasaA=voticasaA[-todrop,]
#moro
doppioB1=which(table(voticasaB1[,3])>1)
doppioni=names(table(voticasaB1[,3])[doppioB1])
d=which(voticasaB1[,3]==doppioni[3])
voticasaB1[d,]
todrop=c()
for (k in 1:2)
{
i=which(voticasaB1[,3]==doppioni[k])
todrop=c(todrop,i[2])
voticasaB1[i[1],17:18]=voticasaB1[i[2],17:18]}
for (k in 3:3)
{
i=which(voticasaB1[,3]==doppioni[k])
todrop=c(todrop,i[1])
#voticasaB1[i[1],17:18]=voticasaB1[i[2],17:18]
}
voticasaB1=voticasaB1[-todrop,]
###verificare giarda,lazzaroni e moro
doppioB2=which(table(voticasaB2[,3])>1)
doppioni=names(table(voticasaB2[,3])[doppioB2])
d=which(voticasaB2[,3]==doppioni[3])
voticasaB2[d,]
todrop=c()
for (k in 1:2)
{
i=which(voticasaB2[,3]==doppioni[k])
todrop=c(todrop,i[2])
voticasaB2[i[1],17:18]=voticasaB2[i[2],17:18]}
for (k in 3:3)
{
i=which(voticasaB2[,3]==doppioni[k])
todrop=c(todrop,i[1])
#voticasaB2[i[1],17:18]=voticasaB2[i[2],17:18]
}
voticasaB2=voticasaB2[-todrop,]
#which(voticasaB2[,2]=="moro")
#which(voticasaB2[,2]=="farina")
#which(voticasaB2[,2]=="leonardi")
#voticasaB2[408,17:18]=voticasaB2[409,17:18]
#voticasaB2[500,17:18]=voticasaB2[499,17:18]
#voticasaB2[280,17:18]=voticasaB2[281,17:18]
#voticasaB2=voticasaB2[-c(409,499,281),]
nomicogA=paste(voticasaA[,1],voticasaA[,2])
zA=matrix(numeric(0),ncol=20,nrow=229)
zA=data.frame(zA)
for(i in 1:length(gruppoA))
{
k=which(nomicogA==gruppoA[i])
if(length(k)!=1) print(i)
zA[i,]=c(gruppoA[i],voticasaA[k,])}
nomicogB=paste(voticasaB1[,1],voticasaB1[,2])
k=which(nomicogB=="chiara venegoni")
nomicogB[k[1]]=paste(voticasaB1[k[1],1],voticasaB1[k[1],2],voticasaB1[k[1],3])
nomicogB[k[2]]=paste(voticasaB1[k[2],1],voticasaB1[k[2],2],voticasaB1[k[2],3])
zB=matrix(numeric(0),ncol=22,nrow=506)
zB=data.frame(zB)
o=c()
for(i in 1:length(gruppoB))
{
k=which(nomicogB==gruppoB[i])
if(length(k)!=1) {print(i);o=c(o,i)}
zB[i,]=c(gruppoB[i],voticasaB1[k[1],])}
gruppoB[o]
temp<- loadWorkbook(file2, create=F)
as.data.frame(readWorksheet(temp, sheet=1))->iscrittiB
iscrittiB1=iscrittiB[which(iscrittiB[,"giorno"]==14),]
iscrittiB2=iscrittiB[which(iscrittiB[,"giorno"]==15),]
matricoleA=zA[,4]
elenco=c()
for (i in matricoleA)    { k=which(voticasaA[,3]==i)   ;elenco=c(elenco,k)}
elencoA=elenco
valori=c(19,22,36,39,28)####pesi
as.matrix(valori)->valori
voticasaA[elenco,c(7,9,11,13,15)] ->votic
which(votic=="-",arr.ind=T)->dd
for (i in 1:nrow(dd))
votic[dd[i,1],dd[i,2]]=0
for (i in 1:5) as.numeric(votic[,i])->votic[,i]
as.matrix(votic)%*%valori /sum(valori)->votocompitiA
casaA=cbind(voticasaA[elenco,1:3],votocompitiA,votocompitiA*6/10)
###rielaborazione compiti a casa
length(which(casaA[,4]==0))
mean(casaA[,4])
max(casaA[,4])
sd(casaA[,4])
hist(casaA[,4])
casaA
casaA[1:5,]
dim(casaA)
temp<- loadWorkbook(file2, create=F)
matricoleA=zA[,4]
elenco=c()
elenco=c()
for (i in matricoleA)    { k=which(voticasaB1[,3]==i)   ;elenco=c(elenco,k)}
elencoA=elenco
valori=c(19,22,36,39,28)####pesi
as.matrix(valori)->valori
voticasaA[elenco,c(7,9,11,13,15)] ->votic
voticasaB1[elenco,c(7,9,11,13,15)] ->votic
which(votic=="-",arr.ind=T)->dd
for (i in 1:nrow(dd))
votic[dd[i,1],dd[i,2]]=0
for (i in 1:5) as.numeric(votic[,i])->votic[,i]
as.matrix(votic)%*%valori /sum(valori)->votocompitiA
casaA2=cbind(voticasaA[elenco,1:3],votocompitiA,votocompitiA*6/10)
dim(casaA2)
casaA2
casaA2[1:4,]
casaA[1:4,]
casaA2[,5]
casaA2[,5]-casaA[.5]
casaA2[,5]-casaA[,5]
casaA=casaA2
matricoleB1=zB[,4]
elenco=c()
for (i in matricoleB1)    { k=which(voticasaB1[,3]==i)
elenco=c(elenco,k)}
elencoB1=elenco
valori=c(19,22,36,39,28)####pesi
as.matrix(valori)->valori
voticasaB1[elenco,c(7,9,11,13,15)] ->votic
which(votic=="-",arr.ind=T)->dd
for (i in 1:nrow(dd))
votic[dd[i,1],dd[i,2]]=0
for (i in 1:5) as.numeric(votic[,i])->votic[,i]
as.matrix(votic)%*%valori /sum(valori)->votocompitiB1
casaB1=cbind(voticasaB1[elenco,1:3],votocompitiB1,votocompitiB1*6/10)
casaB=casaB1
###rielaborazione compiti a casa
mean(casaB1[,4])
mean(casaA[,4])
max(casaB1[,4])
sd(casaA[,4])
sd(casaB1[,4])
quantile(casaB1[,4])
quantile(casaA[,4])
par(mfrow=c(1,3))
hist(casaB1[,4])
hist(casaA[,4])
compiti=c(unique(casaA[,3]),unique(casaB1[,3]))
voticompiti2016=data.frame(compiti,rep(0,length(compiti)),rep(0,length(compiti)),rep(0,length(compiti)))
for (s in 1:nrow(casaA))
{k=which(compiti==casaA[s,3])
voticompiti2016[k,2:4]=casaA[s,c(1,2,4)]}
for (s in 1:nrow(casaB))
{k=which(compiti==casaB[s,3])
voticompiti2016[k,2:4]=casaB[s,c(1,2,4)]}
voticompiti2016[,4]=voticompiti2016[,4]*6/10
data=voticompiti2016
voti=data.frame(data,matrix(numeric(0),nrow=nrow(data),ncol=6))
esameA=as.numeric(voticasaA[,17])
temp=which(is.na(esameA))
todrop=which(is.na(esameA))
toleave=which(!is.na(esameA))
esamA=100*esameA[-temp]/44
formula<-function(x)  60+(x-60)*1.15
formula(esamA)*0.8*30/100->votoA
for(p in 1:length(toleave))
{s=which(data[,1]==voticasaA[toleave[p],3])
voti[s,5] =votoA[p]
voti[s,9] =voti[s,5]+voti[s,4]
}
esameB1=as.numeric(voticasaB1[,19])
temp=which(is.na(esameB1))
toleave=which(!is.na(esameB1))
esamB1=100*esameB1[-temp]/30
x1=quantile(esamB1,seq(0,1,b=.1))
x0=quantile(esamA,seq(0,1,b=.1))
coeff=coefficients(lm(x1~x0))
a=coeff[2]
b=coeff[1]
a=0.9927617
b=-5.018824
formulainversa=function(esamB1,a,b)   esamB1/a- b/a
x0=formulainversa(esamB1,a,b)
formula<-function(x)  60+(x-60)*1.07
formula(x0)*0.8*30/100->votoB1
for(p in 1:length(toleave))
{s=which(voti[,1]==voticasaB1[toleave[p],3])
voti[s,6] =votoB1[p]
voti[s,9] =voti[s,6]+voti[s,4]
}
esameB2=as.numeric(voticasaB2[,17])
temp=which(is.na(esameB2))
toleave=which(!is.na(esameB2))
esamB2=100*esameB2[-temp]/30
x2=quantile(esamB2,seq(0,1,b=.1))
x0=quantile(esamA,seq(0,1,b=.1))
coeff=coefficients(lm(x2~x0))
a=coeff[2]
b=coeff[1]
a= 0.8569994
b=  -12.1982
formulainversa=function(esamB2,a,b)   esamB2/a- b/a
x0=formulainversa(esamB2,a,b)
formula<-function(x)  60+(x-60)*1.05
formula(x0)*0.8*30/100->votoB2
for(p in 1:length(toleave))
{s=which(voti[,1]==voticasaB2[toleave[p],3])
voti[s,7] =votoB2[p]
voti[s,9] =voti[s,7]+voti[s,4]
}
esameC=as.numeric(voti15j)/44*30
esamC=100*esameC/30
x2=quantile(esamC,seq(0,1,b=.1))
x0=quantile(esamA,seq(0,1,b=.1))
coeff=coefficients(lm(x2~x0))
a=coeff[2]
b=coeff[1]
a= 0.8529517
b=   -7.605723
formulainversa=function(esamC,a,b)   esamC/a- b/a
x0=formulainversa(esamC,a,b)
#formula<-function(x)  60+(x-60)*1.05
formula<-function(x)  60+(x-45)*40/45
formula<-function(x)  60+(x-45)*40/40
formula(esamC)*0.8*30/100->votoCs
for(p in 1:length(esameC))
{
s=which(voti[,1]==dati15_2016[p,'Codice.identificativo'])
voti[s,8] =votoCs[p]
voti[s,10] =voti[s,8]+voti[s,4]
}
esameC=as.numeric(voti15j)/44*30
write.csv2(voti15_01_2016,file="voti15012016.csv")
library(devtools)
library(roxygen2)
load_all()
document()
temp=sceltarange(b,-a,a,0)
ftex=paste("\\\\sin(",paste(temp[1:2],c("","x"),collapse="+",sep=""),")")
library(devtools)
library(roxygen2)
load_all()
document()
library(TEST)
funzioneCasuale("sin",3,2)
library(devtools)
library(roxygen2)
load_all()
document()
library(TEST)
funzioneCasuale("sin",3,2)
funzioneCasuale("sin",3,2.finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)
library(devtools)
library(roxygen2)
load_all()
document()
library(devtools)
library(roxygen2)
load_all()
document()
library(devtools)
library(roxygen2)
load_all()
document()
library(devtools)
library(roxygen2)
load_all()
document()
library(TEST)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
load_all()
document()
library(TEST)
library(TEST)
library(TEST)
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
devtools::load_all(".")
document()
library(EsamiR)
availableMethods()
funzioneCasuale(tipo, a = 9, b = 2, finito = F, bignumber = 10^8,
smallnumber = 10^-4)
funzioneCasuale("sin",3,2)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)@fR
funzioneCasuale("sin",3,2,finito=T)@dominio
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
document()
library(EsamiR)
funzioneCasuale("sin",3,2)
funzioneCasuale("sin",3,2)->x
plot(x)
x
x@fR
funzioneCasuale("sin",3,2,finito=T)->x
plot(x)
curve(x@fR,x@dominio,main="grafico")
x@fR
curve(x@fR)
plot(x@fR)
devtools::load_all(".")
library(EsamiR)
funzioneCasuale("sin",3,2,finito=T)->x
plot(x)
plot(x)
x
grafico(x)
getR(x)
getR(x)
x
library(devtools)
library(roxygen2)
load_all()
document()
library(EsamiR)
library(devtools)
library(roxygen2)
load_all()
document()
library(EsamiR)
funzioneCasuale("sin",3,2)
funzioneCasuale("sin",3,2,finito=T)
funzioneCasuale("sin",3,2,finito=T)->x
z
x
plot(X)
plot(x)
curve(x@fR, x@dominio[1],x@dominio[2] ,...)
curve(x@fR, x@dominio[1],x@dominio[2] )
x
x@fR
class(x@fR)
curve(x@fR)
getR(x)
class(x)
x@fR
curve(x@fR)
curve((x@fR),0,1)
f=x@fR
f
curve(f,0,1)
show(f)
getTex(x)
library(EsamiR)
getTex(x)
library(devtools)
library(roxygen2)
load_all()
document()
library(EsamiR)
getR(funzioneCasuale("sin",3,2))
curve(getR(funzioneCasuale("sin",3,2)))
getR(funzioneCasuale("sin",3,2))
gettext(funzioneCasuale("sin",3,2))
class(getR(funzioneCasuale("sin",3,2)))
f=getR(funzioneCasuale("sin",3,2))
f
curve(f)
curve(function(x) 3*x)
f
body(f)
curve(body(f))
curve(f)
curve(f,0,3)
devtools::load_all(".")
library(EsamiR)
f=funzioneCasuale("sin",3,2)
f
f=funzioneCasuale("sin",3,2,finito=T)
plot(f)
f
grafico(f)
devtools::load_all(".")
library(EsamiR)
f=funzioneCasuale("sin",3,2,finito=T)
f
grafico(f)
library(EsamiR)
devtools::load_all(".")
devtools::load_all(".")
library(EsamiR)
grafic
f=funzioneCasuale("sin",3,2,finito=T)
grafico(f)
plot(f)
?plot
load_all()
load_all()
load_all()
load_all()
load_all()
library(EsamiR)
funzioneCasuale("sin",3,2)
funzioneCasuale("sin",3,2)->x
x
x@fR
plot(x)
curve(g<-x@fR)
g=x@fR
curve(g)
load_all()
load_all()
funzioneCasuale("sin",3,2)->x
plot(x)
x
load_all()
funzioneCasuale("sin",3,2,finito=T)->x
plot(x)
